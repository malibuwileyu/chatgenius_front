"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api/messages.ts":
/*!*********************************!*\
  !*** ./src/lib/api/messages.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   messagesApi: function() { return /* binding */ messagesApi; }\n/* harmony export */ });\n/* harmony import */ var _users__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./users */ \"(app-pages-browser)/./src/lib/api/users.ts\");\n\nconst API_BASE = \"/api\";\nconst messagesApi = {\n    sendMessage: async function(channelId, content) {\n        let type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"TEXT\";\n        // First, get the current user's ID\n        console.log(\"Fetching user ID for testuser...\");\n        const user = await _users__WEBPACK_IMPORTED_MODULE_0__.usersApi.getUserByName(\"testuser\");\n        console.log(\"Got user ID:\", user.id);\n        const url = \"\".concat(API_BASE, \"/channels/\").concat(channelId, \"/messages\");\n        const requestBody = {\n            content,\n            userId: user.id,\n            type,\n            channelId\n        };\n        console.log(\"Sending message request:\", {\n            url,\n            channelId,\n            body: requestBody,\n            method: \"POST\"\n        });\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(requestBody)\n        });\n        console.log(\"Response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Response body:\", responseText);\n        if (!response.ok) {\n            console.error(\"Failed to send message:\", responseText);\n            throw new Error(\"Failed to send message: \".concat(responseText));\n        }\n        // Try to parse the response as JSON\n        let data;\n        try {\n            data = JSON.parse(responseText);\n        } catch (e) {\n            console.error(\"Failed to parse response as JSON:\", e);\n            throw new Error(\"Invalid response format from server\");\n        }\n        console.log(\"Message sent successfully:\", data);\n        return data;\n    },\n    getChannelMessages: async (channelId)=>{\n        const url = \"\".concat(API_BASE, \"/channels/\").concat(channelId, \"/messages\");\n        console.log(\"Fetching messages for channel:\", channelId);\n        const response = await fetch(url, {\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        });\n        console.log(\"Get messages response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Get messages response:\", responseText);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch messages: \".concat(responseText));\n        }\n        const data = JSON.parse(responseText);\n        console.log(\"Channel messages:\", data);\n        return Array.isArray(data) ? data : data.messages || [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpL21lc3NhZ2VzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1DO0FBbUNuQyxNQUFNQyxXQUFXO0FBRVYsTUFBTUMsY0FBYztJQUN6QkMsYUFBYSxlQUFPQyxXQUFtQkM7WUFBaUJDLHdFQUFvQjtRQUMxRSxtQ0FBbUM7UUFDbkNDLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1DLE9BQU8sTUFBTVQsNENBQVFBLENBQUNVLGFBQWEsQ0FBQztRQUMxQ0gsUUFBUUMsR0FBRyxDQUFDLGdCQUFnQkMsS0FBS0UsRUFBRTtRQUVuQyxNQUFNQyxNQUFNLEdBQXdCUixPQUFyQkgsVUFBUyxjQUFzQixPQUFWRyxXQUFVO1FBQzlDLE1BQU1TLGNBQWM7WUFDbEJSO1lBQ0FTLFFBQVFMLEtBQUtFLEVBQUU7WUFDZkw7WUFDQUY7UUFDRjtRQUVBRyxRQUFRQyxHQUFHLENBQUMsNEJBQTRCO1lBQ3RDSTtZQUNBUjtZQUNBVyxNQUFNRjtZQUNORyxRQUFRO1FBQ1Y7UUFFQSxNQUFNQyxXQUFXLE1BQU1DLE1BQU1OLEtBQUs7WUFDaENJLFFBQVE7WUFDUkcsU0FBUztnQkFDUCxnQkFBZ0I7Z0JBQ2hCLFVBQVU7WUFDWjtZQUNBSixNQUFNSyxLQUFLQyxTQUFTLENBQUNSO1FBQ3ZCO1FBRUFOLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JTLFNBQVNLLE1BQU07UUFDL0MsTUFBTUMsZUFBZSxNQUFNTixTQUFTTyxJQUFJO1FBQ3hDakIsUUFBUUMsR0FBRyxDQUFDLGtCQUFrQmU7UUFFOUIsSUFBSSxDQUFDTixTQUFTUSxFQUFFLEVBQUU7WUFDaEJsQixRQUFRbUIsS0FBSyxDQUFDLDJCQUEyQkg7WUFDekMsTUFBTSxJQUFJSSxNQUFNLDJCQUF3QyxPQUFiSjtRQUM3QztRQUVBLG9DQUFvQztRQUNwQyxJQUFJSztRQUNKLElBQUk7WUFDRkEsT0FBT1IsS0FBS1MsS0FBSyxDQUFDTjtRQUNwQixFQUFFLE9BQU9PLEdBQUc7WUFDVnZCLFFBQVFtQixLQUFLLENBQUMscUNBQXFDSTtZQUNuRCxNQUFNLElBQUlILE1BQU07UUFDbEI7UUFFQXBCLFFBQVFDLEdBQUcsQ0FBQyw4QkFBOEJvQjtRQUMxQyxPQUFPQTtJQUNUO0lBRUFHLG9CQUFvQixPQUFPM0I7UUFDekIsTUFBTVEsTUFBTSxHQUF3QlIsT0FBckJILFVBQVMsY0FBc0IsT0FBVkcsV0FBVTtRQUM5Q0csUUFBUUMsR0FBRyxDQUFDLGtDQUFrQ0o7UUFFOUMsTUFBTWEsV0FBVyxNQUFNQyxNQUFNTixLQUFLO1lBQ2hDTyxTQUFTO2dCQUNQLFVBQVU7WUFDWjtRQUNGO1FBRUFaLFFBQVFDLEdBQUcsQ0FBQyxpQ0FBaUNTLFNBQVNLLE1BQU07UUFDNUQsTUFBTUMsZUFBZSxNQUFNTixTQUFTTyxJQUFJO1FBQ3hDakIsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQmU7UUFFdEMsSUFBSSxDQUFDTixTQUFTUSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJRSxNQUFNLDZCQUEwQyxPQUFiSjtRQUMvQztRQUVBLE1BQU1LLE9BQU9SLEtBQUtTLEtBQUssQ0FBQ047UUFDeEJoQixRQUFRQyxHQUFHLENBQUMscUJBQXFCb0I7UUFDakMsT0FBT0ksTUFBTUMsT0FBTyxDQUFDTCxRQUFRQSxPQUFPQSxLQUFLTSxRQUFRLElBQUksRUFBRTtJQUN6RDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hcGkvbWVzc2FnZXMudHM/MDVhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2Vyc0FwaSB9IGZyb20gJy4vdXNlcnMnO1xyXG5cclxuLy8gTWVzc2FnZSB0eXBlcyBmcm9tIHRoZSBKYXZhIGVudW1cclxuZXhwb3J0IHR5cGUgTWVzc2FnZVR5cGUgPSAnVEVYVCcgfCAnU1lTVEVNJyB8ICdUSFJFQUQnIHwgJ1JFUExZJztcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICBjaGFubmVsSWQ6IHN0cmluZztcclxuICB1c2VySWQ6IHN0cmluZztcclxuICB0eXBlOiBNZXNzYWdlVHlwZTtcclxuICBjcmVhdGVkQXQ6IHN0cmluZztcclxuICB1cGRhdGVkQXQ/OiBzdHJpbmc7XHJcbiAgdGhyZWFkSWQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmludGVyZmFjZSBDcmVhdGVNZXNzYWdlUmVxdWVzdCB7XHJcbiAgY29udGVudDogc3RyaW5nO1xyXG4gIHVzZXJJZDogc3RyaW5nO1xyXG4gIHR5cGU6IE1lc3NhZ2VUeXBlO1xyXG4gIGNoYW5uZWxJZDogc3RyaW5nO1xyXG4gIHRocmVhZElkPzogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgQ3JlYXRlTWVzc2FnZVJlc3BvbnNlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIGNvbnRlbnQ6IHN0cmluZztcclxuICBjaGFubmVsSWQ6IHN0cmluZztcclxuICB1c2VySWQ6IHN0cmluZztcclxuICB0eXBlOiBNZXNzYWdlVHlwZTtcclxuICBjcmVhdGVkQXQ6IHN0cmluZztcclxuICB1cGRhdGVkQXQ/OiBzdHJpbmc7XHJcbiAgdGhyZWFkSWQ/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmNvbnN0IEFQSV9CQVNFID0gJy9hcGknO1xyXG5cclxuZXhwb3J0IGNvbnN0IG1lc3NhZ2VzQXBpID0ge1xyXG4gIHNlbmRNZXNzYWdlOiBhc3luYyAoY2hhbm5lbElkOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZywgdHlwZTogTWVzc2FnZVR5cGUgPSAnVEVYVCcpOiBQcm9taXNlPE1lc3NhZ2U+ID0+IHtcclxuICAgIC8vIEZpcnN0LCBnZXQgdGhlIGN1cnJlbnQgdXNlcidzIElEXHJcbiAgICBjb25zb2xlLmxvZygnRmV0Y2hpbmcgdXNlciBJRCBmb3IgdGVzdHVzZXIuLi4nKTtcclxuICAgIGNvbnN0IHVzZXIgPSBhd2FpdCB1c2Vyc0FwaS5nZXRVc2VyQnlOYW1lKCd0ZXN0dXNlcicpO1xyXG4gICAgY29uc29sZS5sb2coJ0dvdCB1c2VyIElEOicsIHVzZXIuaWQpO1xyXG5cclxuICAgIGNvbnN0IHVybCA9IGAke0FQSV9CQVNFfS9jaGFubmVscy8ke2NoYW5uZWxJZH0vbWVzc2FnZXNgO1xyXG4gICAgY29uc3QgcmVxdWVzdEJvZHkgPSB7IFxyXG4gICAgICBjb250ZW50LFxyXG4gICAgICB1c2VySWQ6IHVzZXIuaWQsICAvLyBVc2UgdGhlIGZyZXNobHkgZmV0Y2hlZCB1c2VyIElEXHJcbiAgICAgIHR5cGUsXHJcbiAgICAgIGNoYW5uZWxJZFxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coJ1NlbmRpbmcgbWVzc2FnZSByZXF1ZXN0OicsIHtcclxuICAgICAgdXJsLFxyXG4gICAgICBjaGFubmVsSWQsXHJcbiAgICAgIGJvZHk6IHJlcXVlc3RCb2R5LFxyXG4gICAgICBtZXRob2Q6ICdQT1NUJ1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICdBY2NlcHQnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHJlcXVlc3RCb2R5KSxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdSZXNwb25zZSBzdGF0dXM6JywgcmVzcG9uc2Uuc3RhdHVzKTtcclxuICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdSZXNwb25zZSBib2R5OicsIHJlc3BvbnNlVGV4dCk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gc2VuZCBtZXNzYWdlOicsIHJlc3BvbnNlVGV4dCk7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHNlbmQgbWVzc2FnZTogJHtyZXNwb25zZVRleHR9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gVHJ5IHRvIHBhcnNlIHRoZSByZXNwb25zZSBhcyBKU09OXHJcbiAgICBsZXQgZGF0YTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGRhdGEgPSBKU09OLnBhcnNlKHJlc3BvbnNlVGV4dCk7XHJcbiAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBwYXJzZSByZXNwb25zZSBhcyBKU09OOicsIGUpO1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgcmVzcG9uc2UgZm9ybWF0IGZyb20gc2VydmVyJyk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ01lc3NhZ2Ugc2VudCBzdWNjZXNzZnVsbHk6JywgZGF0YSk7XHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9LFxyXG5cclxuICBnZXRDaGFubmVsTWVzc2FnZXM6IGFzeW5jIChjaGFubmVsSWQ6IHN0cmluZyk6IFByb21pc2U8TWVzc2FnZVtdPiA9PiB7XHJcbiAgICBjb25zdCB1cmwgPSBgJHtBUElfQkFTRX0vY2hhbm5lbHMvJHtjaGFubmVsSWR9L21lc3NhZ2VzYDtcclxuICAgIGNvbnNvbGUubG9nKCdGZXRjaGluZyBtZXNzYWdlcyBmb3IgY2hhbm5lbDonLCBjaGFubmVsSWQpO1xyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0dldCBtZXNzYWdlcyByZXNwb25zZSBzdGF0dXM6JywgcmVzcG9uc2Uuc3RhdHVzKTtcclxuICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdHZXQgbWVzc2FnZXMgcmVzcG9uc2U6JywgcmVzcG9uc2VUZXh0KTtcclxuXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIG1lc3NhZ2VzOiAke3Jlc3BvbnNlVGV4dH1gKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZVRleHQpO1xyXG4gICAgY29uc29sZS5sb2coJ0NoYW5uZWwgbWVzc2FnZXM6JywgZGF0YSk7XHJcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShkYXRhKSA/IGRhdGEgOiBkYXRhLm1lc3NhZ2VzIHx8IFtdO1xyXG4gIH0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJ1c2Vyc0FwaSIsIkFQSV9CQVNFIiwibWVzc2FnZXNBcGkiLCJzZW5kTWVzc2FnZSIsImNoYW5uZWxJZCIsImNvbnRlbnQiLCJ0eXBlIiwiY29uc29sZSIsImxvZyIsInVzZXIiLCJnZXRVc2VyQnlOYW1lIiwiaWQiLCJ1cmwiLCJyZXF1ZXN0Qm9keSIsInVzZXJJZCIsImJvZHkiLCJtZXRob2QiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJzdGF0dXMiLCJyZXNwb25zZVRleHQiLCJ0ZXh0Iiwib2siLCJlcnJvciIsIkVycm9yIiwiZGF0YSIsInBhcnNlIiwiZSIsImdldENoYW5uZWxNZXNzYWdlcyIsIkFycmF5IiwiaXNBcnJheSIsIm1lc3NhZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/messages.ts\n"));

/***/ })

});