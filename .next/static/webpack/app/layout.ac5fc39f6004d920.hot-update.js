"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"96ec906ca64d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/ZDQwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjk2ZWM5MDZjYTY0ZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/api/client.ts":
/*!*******************************!*\
  !*** ./src/lib/api/client.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; }\n/* harmony export */ });\n/* harmony import */ var _stores_user_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../stores/user-store */ \"(app-pages-browser)/./src/stores/user-store.ts\");\n\nconst API_BASE = \"http://localhost:8080/api\";\nclass ApiError extends Error {\n    constructor(message, status, data){\n        super(message);\n        this.status = status;\n        this.data = data;\n        this.name = \"ApiError\";\n    }\n}\nconst apiClient = {\n    request: async function(endpoint) {\n        let config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        const { requiresAuth = true, headers: customHeaders = {}, ...customConfig } = config;\n        const headers = {\n            \"Accept\": \"application/json\",\n            ...customHeaders\n        };\n        if (customConfig.body) {\n            headers[\"Content-Type\"] = \"application/json\";\n        }\n        // Skip auth header for refresh token endpoint\n        const isRefreshRequest = endpoint === \"/auth/refresh\";\n        if (requiresAuth && !isRefreshRequest) {\n            const token = localStorage.getItem(\"token\");\n            if (!token) {\n                throw new ApiError(\"No authentication token found\", 401);\n            }\n            headers[\"Authorization\"] = \"Bearer \".concat(token);\n        }\n        const response = await fetch(\"\".concat(API_BASE).concat(endpoint), {\n            ...customConfig,\n            headers,\n            credentials: \"include\"\n        });\n        // Only handle 401 for non-refresh requests\n        if (response.status === 401 && !isRefreshRequest) {\n            try {\n                const store = _stores_user_store__WEBPACK_IMPORTED_MODULE_0__.useUserStore.getState();\n                await store.refreshToken();\n                const newToken = localStorage.getItem(\"token\");\n                if (!newToken) {\n                    throw new ApiError(\"Token refresh failed - no new token\", 401);\n                }\n                headers[\"Authorization\"] = \"Bearer \".concat(newToken);\n                const retryResponse = await fetch(\"\".concat(API_BASE).concat(endpoint), {\n                    ...customConfig,\n                    headers,\n                    credentials: \"include\"\n                });\n                if (!retryResponse.ok) {\n                    throw new ApiError(\"Request failed after token refresh\", retryResponse.status, await retryResponse.text());\n                }\n                const text = await retryResponse.text();\n                return text ? JSON.parse(text) : null;\n            } catch (error) {\n                // If refresh fails, clear auth state and throw error\n                const store = _stores_user_store__WEBPACK_IMPORTED_MODULE_0__.useUserStore.getState();\n                store.logout();\n                throw error instanceof ApiError ? error : new ApiError(\"Authentication failed\", 401);\n            }\n        }\n        // Handle other errors\n        if (!response.ok) {\n            const text = await response.text();\n            throw new ApiError(text, response.status);\n        }\n        // Parse and return response\n        try {\n            const text = await response.text();\n            return text ? JSON.parse(text) : null;\n        } catch (error) {\n            console.error(\"Failed to parse response:\", error);\n            throw new ApiError(\"Invalid response format\", response.status);\n        }\n    },\n    get: function(endpoint) {\n        let config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        return apiClient.request(endpoint, {\n            ...config,\n            method: \"GET\"\n        });\n    },\n    post: function(endpoint, data) {\n        let config = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        return apiClient.request(endpoint, {\n            ...config,\n            method: \"POST\",\n            body: JSON.stringify(data)\n        });\n    },\n    put: function(endpoint, data) {\n        let config = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n        return apiClient.request(endpoint, {\n            ...config,\n            method: \"PUT\",\n            body: JSON.stringify(data)\n        });\n    },\n    delete: function(endpoint) {\n        let config = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        return apiClient.request(endpoint, {\n            ...config,\n            method: \"DELETE\"\n        });\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/client.ts\n"));

/***/ })

});