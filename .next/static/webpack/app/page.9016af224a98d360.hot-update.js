"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api/channels.ts":
/*!*********************************!*\
  !*** ./src/lib/api/channels.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   channelsApi: function() { return /* binding */ channelsApi; }\n/* harmony export */ });\nconst API_BASE = \"/api\";\nconst channelsApi = {\n    list: async ()=>{\n        console.log(\"Fetching all channels from:\", \"\".concat(API_BASE, \"/channels\"));\n        try {\n            const response = await fetch(\"\".concat(API_BASE, \"/channels\"), {\n                method: \"GET\",\n                headers: {\n                    \"Accept\": \"application/json\"\n                }\n            });\n            console.log(\"Channel list response status:\", response.status);\n            const responseText = await response.text();\n            console.log(\"Channel list raw response:\", responseText);\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch channels: \".concat(responseText));\n            }\n            const data = JSON.parse(responseText);\n            console.log(\"Parsed channel list:\", data);\n            // If the response is an array, use it directly; if it has a channels property, use that\n            const channels = Array.isArray(data) ? data : data.channels || [];\n            console.log(\"Final channels list:\", channels);\n            return channels;\n        } catch (error) {\n            console.error(\"Error fetching channels:\", error);\n            throw error;\n        }\n    },\n    create: async (request)=>{\n        const url = \"\".concat(API_BASE, \"/channels\");\n        const requestBody = {\n            name: request.name,\n            type: request.type\n        };\n        console.log(\"Creating channel:\", {\n            url,\n            body: requestBody,\n            method: \"POST\"\n        });\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            body: JSON.stringify(requestBody)\n        });\n        console.log(\"Create channel response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Create channel response:\", responseText);\n        if (!response.ok) {\n            throw new Error(\"Failed to create channel: \".concat(responseText));\n        }\n        const data = JSON.parse(responseText);\n        console.log(\"Created channel:\", data);\n        return data;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpL2NoYW5uZWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFrQ0EsTUFBTUEsV0FBVztBQUVWLE1BQU1DLGNBQWM7SUFDekJDLE1BQU07UUFDSkMsUUFBUUMsR0FBRyxDQUFDLCtCQUErQixHQUFZLE9BQVRKLFVBQVM7UUFDdkQsSUFBSTtZQUNGLE1BQU1LLFdBQVcsTUFBTUMsTUFBTSxHQUFZLE9BQVROLFVBQVMsY0FBWTtnQkFDbkRPLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ1AsVUFBVTtnQkFDWjtZQUNGO1lBRUFMLFFBQVFDLEdBQUcsQ0FBQyxpQ0FBaUNDLFNBQVNJLE1BQU07WUFDNUQsTUFBTUMsZUFBZSxNQUFNTCxTQUFTTSxJQUFJO1lBQ3hDUixRQUFRQyxHQUFHLENBQUMsOEJBQThCTTtZQUUxQyxJQUFJLENBQUNMLFNBQVNPLEVBQUUsRUFBRTtnQkFDaEIsTUFBTSxJQUFJQyxNQUFNLDZCQUEwQyxPQUFiSDtZQUMvQztZQUVBLE1BQU1JLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ047WUFDeEJQLFFBQVFDLEdBQUcsQ0FBQyx3QkFBd0JVO1lBRXBDLHdGQUF3RjtZQUN4RixNQUFNRyxXQUFXQyxNQUFNQyxPQUFPLENBQUNMLFFBQVFBLE9BQU9BLEtBQUtHLFFBQVEsSUFBSSxFQUFFO1lBQ2pFZCxRQUFRQyxHQUFHLENBQUMsd0JBQXdCYTtZQUVwQyxPQUFPQTtRQUNULEVBQUUsT0FBT0csT0FBTztZQUNkakIsUUFBUWlCLEtBQUssQ0FBQyw0QkFBNEJBO1lBQzFDLE1BQU1BO1FBQ1I7SUFDRjtJQUVBQyxRQUFRLE9BQU9DO1FBQ2IsTUFBTUMsTUFBTSxHQUFZLE9BQVR2QixVQUFTO1FBQ3hCLE1BQU13QixjQUFjO1lBQUVDLE1BQU1ILFFBQVFHLElBQUk7WUFBRUMsTUFBTUosUUFBUUksSUFBSTtRQUFDO1FBRTdEdkIsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQjtZQUMvQm1CO1lBQ0FJLE1BQU1IO1lBQ05qQixRQUFRO1FBQ1Y7UUFFQSxNQUFNRixXQUFXLE1BQU1DLE1BQU1pQixLQUFLO1lBQ2hDaEIsUUFBUTtZQUNSQyxTQUFTO2dCQUNQLGdCQUFnQjtnQkFDaEIsVUFBVTtZQUNaO1lBQ0FtQixNQUFNWixLQUFLYSxTQUFTLENBQUNKO1FBQ3ZCO1FBRUFyQixRQUFRQyxHQUFHLENBQUMsbUNBQW1DQyxTQUFTSSxNQUFNO1FBQzlELE1BQU1DLGVBQWUsTUFBTUwsU0FBU00sSUFBSTtRQUN4Q1IsUUFBUUMsR0FBRyxDQUFDLDRCQUE0Qk07UUFFeEMsSUFBSSxDQUFDTCxTQUFTTyxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLDZCQUEwQyxPQUFiSDtRQUMvQztRQUVBLE1BQU1JLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ047UUFDeEJQLFFBQVFDLEdBQUcsQ0FBQyxvQkFBb0JVO1FBQ2hDLE9BQU9BO0lBQ1Q7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvYXBpL2NoYW5uZWxzLnRzPzZjMGEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ2hhbm5lbFR5cGUgPSAnUFVCTElDJyB8ICdQUklWQVRFJyB8ICdESVJFQ1RfTUVTU0FHRSc7XHJcbmV4cG9ydCB0eXBlIENyZWF0ZUNoYW5uZWxUeXBlID0gJ1BVQkxJQycgfCAnUFJJVkFURSc7XHJcblxyXG5pbnRlcmZhY2UgVXNlclJlc3BvbnNlIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICBjcmVhdGVkQXQ6IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDaGFubmVsIHtcclxuICBpZDogc3RyaW5nO1xyXG4gIG5hbWU6IHN0cmluZztcclxuICB0eXBlOiBDaGFubmVsVHlwZTtcclxuICBjcmVhdGVkQXQ6IHN0cmluZztcclxuICBtZW1iZXJzOiBVc2VyUmVzcG9uc2VbXTtcclxufVxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDcmVhdGVDaGFubmVsUmVxdWVzdCB7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIHR5cGU6IENyZWF0ZUNoYW5uZWxUeXBlO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIENyZWF0ZUNoYW5uZWxSZXNwb25zZSB7XHJcbiAgaWQ6IHN0cmluZztcclxuICBuYW1lOiBzdHJpbmc7XHJcbiAgdHlwZTogQ2hhbm5lbFR5cGU7XHJcbiAgY3JlYXRlZEF0OiBzdHJpbmc7XHJcbiAgbWVtYmVyczogVXNlclJlc3BvbnNlW107XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGlzdENoYW5uZWxzUmVzcG9uc2Uge1xyXG4gIGNoYW5uZWxzOiBDaGFubmVsW107XHJcbn1cclxuXHJcbmNvbnN0IEFQSV9CQVNFID0gJy9hcGknO1xyXG5cclxuZXhwb3J0IGNvbnN0IGNoYW5uZWxzQXBpID0ge1xyXG4gIGxpc3Q6IGFzeW5jICgpOiBQcm9taXNlPENoYW5uZWxbXT4gPT4ge1xyXG4gICAgY29uc29sZS5sb2coJ0ZldGNoaW5nIGFsbCBjaGFubmVscyBmcm9tOicsIGAke0FQSV9CQVNFfS9jaGFubmVsc2ApO1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfQkFTRX0vY2hhbm5lbHNgLCB7XHJcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY29uc29sZS5sb2coJ0NoYW5uZWwgbGlzdCByZXNwb25zZSBzdGF0dXM6JywgcmVzcG9uc2Uuc3RhdHVzKTtcclxuICAgICAgY29uc3QgcmVzcG9uc2VUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xyXG4gICAgICBjb25zb2xlLmxvZygnQ2hhbm5lbCBsaXN0IHJhdyByZXNwb25zZTonLCByZXNwb25zZVRleHQpO1xyXG5cclxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGZldGNoIGNoYW5uZWxzOiAke3Jlc3BvbnNlVGV4dH1gKTtcclxuICAgICAgfVxyXG5cclxuICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2VUZXh0KTtcclxuICAgICAgY29uc29sZS5sb2coJ1BhcnNlZCBjaGFubmVsIGxpc3Q6JywgZGF0YSk7XHJcblxyXG4gICAgICAvLyBJZiB0aGUgcmVzcG9uc2UgaXMgYW4gYXJyYXksIHVzZSBpdCBkaXJlY3RseTsgaWYgaXQgaGFzIGEgY2hhbm5lbHMgcHJvcGVydHksIHVzZSB0aGF0XHJcbiAgICAgIGNvbnN0IGNoYW5uZWxzID0gQXJyYXkuaXNBcnJheShkYXRhKSA/IGRhdGEgOiBkYXRhLmNoYW5uZWxzIHx8IFtdO1xyXG4gICAgICBjb25zb2xlLmxvZygnRmluYWwgY2hhbm5lbHMgbGlzdDonLCBjaGFubmVscyk7XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gY2hhbm5lbHM7XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyBjaGFubmVsczonLCBlcnJvcik7XHJcbiAgICAgIHRocm93IGVycm9yO1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGNyZWF0ZTogYXN5bmMgKHJlcXVlc3Q6IENyZWF0ZUNoYW5uZWxSZXF1ZXN0KTogUHJvbWlzZTxDaGFubmVsPiA9PiB7XHJcbiAgICBjb25zdCB1cmwgPSBgJHtBUElfQkFTRX0vY2hhbm5lbHNgO1xyXG4gICAgY29uc3QgcmVxdWVzdEJvZHkgPSB7IG5hbWU6IHJlcXVlc3QubmFtZSwgdHlwZTogcmVxdWVzdC50eXBlIH07XHJcbiAgICBcclxuICAgIGNvbnNvbGUubG9nKCdDcmVhdGluZyBjaGFubmVsOicsIHtcclxuICAgICAgdXJsLFxyXG4gICAgICBib2R5OiByZXF1ZXN0Qm9keSxcclxuICAgICAgbWV0aG9kOiAnUE9TVCdcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShyZXF1ZXN0Qm9keSksXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zb2xlLmxvZygnQ3JlYXRlIGNoYW5uZWwgcmVzcG9uc2Ugc3RhdHVzOicsIHJlc3BvbnNlLnN0YXR1cyk7XHJcbiAgICBjb25zdCByZXNwb25zZVRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnQ3JlYXRlIGNoYW5uZWwgcmVzcG9uc2U6JywgcmVzcG9uc2VUZXh0KTtcclxuXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGNyZWF0ZSBjaGFubmVsOiAke3Jlc3BvbnNlVGV4dH1gKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZVRleHQpO1xyXG4gICAgY29uc29sZS5sb2coJ0NyZWF0ZWQgY2hhbm5lbDonLCBkYXRhKTtcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0sXHJcbn07XHJcbiJdLCJuYW1lcyI6WyJBUElfQkFTRSIsImNoYW5uZWxzQXBpIiwibGlzdCIsImNvbnNvbGUiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsInN0YXR1cyIsInJlc3BvbnNlVGV4dCIsInRleHQiLCJvayIsIkVycm9yIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsImNoYW5uZWxzIiwiQXJyYXkiLCJpc0FycmF5IiwiZXJyb3IiLCJjcmVhdGUiLCJyZXF1ZXN0IiwidXJsIiwicmVxdWVzdEJvZHkiLCJuYW1lIiwidHlwZSIsImJvZHkiLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/channels.ts\n"));

/***/ })

});