"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/api/users.ts":
/*!******************************!*\
  !*** ./src/lib/api/users.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usersApi: function() { return /* binding */ usersApi; }\n/* harmony export */ });\nconst API_BASE = \"/api\";\nconst usersApi = {\n    getCurrentUser: async ()=>{\n        const url = \"\".concat(API_BASE, \"/users/current\");\n        console.log(\"Fetching current user\");\n        const response = await fetch(url, {\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        });\n        console.log(\"Get current user response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Get current user response:\", responseText);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch current user: \".concat(responseText));\n        }\n        const data = JSON.parse(responseText);\n        console.log(\"Current user:\", data);\n        return data;\n    },\n    getUserByName: async (username)=>{\n        const url = \"\".concat(API_BASE, \"/users/name/\").concat(username);\n        console.log(\"Fetching user by name:\", username);\n        const response = await fetch(url, {\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        });\n        console.log(\"Get user response status:\", response.status);\n        const responseText = await response.text();\n        console.log(\"Get user response:\", responseText);\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch user: \".concat(responseText));\n        }\n        const data = JSON.parse(responseText);\n        console.log(\"User data:\", data);\n        return data;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpL3VzZXJzLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFNQSxNQUFNQSxXQUFXO0FBRVYsTUFBTUMsV0FBVztJQUN0QkMsZ0JBQWdCO1FBQ2QsTUFBTUMsTUFBTSxHQUFZLE9BQVRILFVBQVM7UUFDeEJJLFFBQVFDLEdBQUcsQ0FBQztRQUVaLE1BQU1DLFdBQVcsTUFBTUMsTUFBTUosS0FBSztZQUNoQ0ssU0FBUztnQkFDUCxVQUFVO1lBQ1o7UUFDRjtRQUVBSixRQUFRQyxHQUFHLENBQUMscUNBQXFDQyxTQUFTRyxNQUFNO1FBQ2hFLE1BQU1DLGVBQWUsTUFBTUosU0FBU0ssSUFBSTtRQUN4Q1AsUUFBUUMsR0FBRyxDQUFDLDhCQUE4Qks7UUFFMUMsSUFBSSxDQUFDSixTQUFTTSxFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLGlDQUE4QyxPQUFiSDtRQUNuRDtRQUVBLE1BQU1JLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ047UUFDeEJOLFFBQVFDLEdBQUcsQ0FBQyxpQkFBaUJTO1FBQzdCLE9BQU9BO0lBQ1Q7SUFFQUcsZUFBZSxPQUFPQztRQUNwQixNQUFNZixNQUFNLEdBQTBCZSxPQUF2QmxCLFVBQVMsZ0JBQXVCLE9BQVRrQjtRQUN0Q2QsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQmE7UUFFdEMsTUFBTVosV0FBVyxNQUFNQyxNQUFNSixLQUFLO1lBQ2hDSyxTQUFTO2dCQUNQLFVBQVU7WUFDWjtRQUNGO1FBRUFKLFFBQVFDLEdBQUcsQ0FBQyw2QkFBNkJDLFNBQVNHLE1BQU07UUFDeEQsTUFBTUMsZUFBZSxNQUFNSixTQUFTSyxJQUFJO1FBQ3hDUCxRQUFRQyxHQUFHLENBQUMsc0JBQXNCSztRQUVsQyxJQUFJLENBQUNKLFNBQVNNLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU0seUJBQXNDLE9BQWJIO1FBQzNDO1FBRUEsTUFBTUksT0FBT0MsS0FBS0MsS0FBSyxDQUFDTjtRQUN4Qk4sUUFBUUMsR0FBRyxDQUFDLGNBQWNTO1FBQzFCLE9BQU9BO0lBQ1Q7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvYXBpL3VzZXJzLnRzPzI5ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW50ZXJmYWNlIFVzZXIge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgbmFtZTogc3RyaW5nO1xyXG4gIGNyZWF0ZWRBdDogc3RyaW5nO1xyXG59XHJcblxyXG5jb25zdCBBUElfQkFTRSA9ICcvYXBpJztcclxuXHJcbmV4cG9ydCBjb25zdCB1c2Vyc0FwaSA9IHtcclxuICBnZXRDdXJyZW50VXNlcjogYXN5bmMgKCk6IFByb21pc2U8VXNlcj4gPT4ge1xyXG4gICAgY29uc3QgdXJsID0gYCR7QVBJX0JBU0V9L3VzZXJzL2N1cnJlbnRgO1xyXG4gICAgY29uc29sZS5sb2coJ0ZldGNoaW5nIGN1cnJlbnQgdXNlcicpO1xyXG5cclxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0dldCBjdXJyZW50IHVzZXIgcmVzcG9uc2Ugc3RhdHVzOicsIHJlc3BvbnNlLnN0YXR1cyk7XHJcbiAgICBjb25zdCByZXNwb25zZVRleHQgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XHJcbiAgICBjb25zb2xlLmxvZygnR2V0IGN1cnJlbnQgdXNlciByZXNwb25zZTonLCByZXNwb25zZVRleHQpO1xyXG5cclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggY3VycmVudCB1c2VyOiAke3Jlc3BvbnNlVGV4dH1gKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBkYXRhID0gSlNPTi5wYXJzZShyZXNwb25zZVRleHQpO1xyXG4gICAgY29uc29sZS5sb2coJ0N1cnJlbnQgdXNlcjonLCBkYXRhKTtcclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH0sXHJcblxyXG4gIGdldFVzZXJCeU5hbWU6IGFzeW5jICh1c2VybmFtZTogc3RyaW5nKTogUHJvbWlzZTxVc2VyPiA9PiB7XHJcbiAgICBjb25zdCB1cmwgPSBgJHtBUElfQkFTRX0vdXNlcnMvbmFtZS8ke3VzZXJuYW1lfWA7XHJcbiAgICBjb25zb2xlLmxvZygnRmV0Y2hpbmcgdXNlciBieSBuYW1lOicsIHVzZXJuYW1lKTtcclxuXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdHZXQgdXNlciByZXNwb25zZSBzdGF0dXM6JywgcmVzcG9uc2Uuc3RhdHVzKTtcclxuICAgIGNvbnN0IHJlc3BvbnNlVGV4dCA9IGF3YWl0IHJlc3BvbnNlLnRleHQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdHZXQgdXNlciByZXNwb25zZTonLCByZXNwb25zZVRleHQpO1xyXG5cclxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggdXNlcjogJHtyZXNwb25zZVRleHR9YCk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UocmVzcG9uc2VUZXh0KTtcclxuICAgIGNvbnNvbGUubG9nKCdVc2VyIGRhdGE6JywgZGF0YSk7XHJcbiAgICByZXR1cm4gZGF0YTtcclxuICB9LFxyXG59OyAiXSwibmFtZXMiOlsiQVBJX0JBU0UiLCJ1c2Vyc0FwaSIsImdldEN1cnJlbnRVc2VyIiwidXJsIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJoZWFkZXJzIiwic3RhdHVzIiwicmVzcG9uc2VUZXh0IiwidGV4dCIsIm9rIiwiRXJyb3IiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiZ2V0VXNlckJ5TmFtZSIsInVzZXJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/users.ts\n"));

/***/ })

});