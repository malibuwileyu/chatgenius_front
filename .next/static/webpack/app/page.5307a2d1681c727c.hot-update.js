"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/stores/message-store.ts":
/*!*************************************!*\
  !*** ./src/stores/message-store.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMessageStore: function() { return /* binding */ useMessageStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var _lib_api_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/api/messages */ \"(app-pages-browser)/./src/lib/api/messages.ts\");\n\n\nconst useMessageStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        messages: {},\n        isLoading: false,\n        error: null,\n        fetchMessages: async (channelId)=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                console.log(\"Store: Fetching messages for channel:\", channelId);\n                const messages = await _lib_api_messages__WEBPACK_IMPORTED_MODULE_0__.messagesApi.getChannelMessages(channelId);\n                console.log(\"Store: Received messages:\", messages);\n                // Sort messages by creation date\n                const sortedMessages = [\n                    ...messages\n                ].sort((a, b)=>new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime());\n                set((state)=>({\n                        messages: {\n                            ...state.messages,\n                            [channelId]: sortedMessages\n                        }\n                    }));\n            } catch (error) {\n                console.error(\"Store: Error fetching messages:\", error);\n                set({\n                    error: error.message\n                });\n            } finally{\n                set({\n                    isLoading: false\n                });\n            }\n        },\n        sendMessage: async function(channelId, content) {\n            let type = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"TEXT\";\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                console.log(\"Store: Sending message:\", {\n                    channelId,\n                    content,\n                    type\n                });\n                const message = await _lib_api_messages__WEBPACK_IMPORTED_MODULE_0__.messagesApi.sendMessage(channelId, content, type);\n                console.log(\"Store: Message sent:\", message);\n                // Add the new message to the channel's message list\n                set((state)=>({\n                        messages: {\n                            ...state.messages,\n                            [channelId]: [\n                                ...state.messages[channelId] || [],\n                                message\n                            ]\n                        }\n                    }));\n            } catch (error) {\n                console.error(\"Store: Error sending message:\", error);\n                set({\n                    error: error.message\n                });\n                throw error;\n            } finally{\n                set({\n                    isLoading: false\n                });\n            }\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZXMvbWVzc2FnZS1zdG9yZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDbUM7QUFVN0QsTUFBTUUsa0JBQWtCRiwrQ0FBTUEsQ0FBZSxDQUFDRyxLQUFLQyxNQUFTO1FBQ2pFQyxVQUFVLENBQUM7UUFDWEMsV0FBVztRQUNYQyxPQUFPO1FBRVBDLGVBQWUsT0FBT0M7WUFDcEJOLElBQUk7Z0JBQUVHLFdBQVc7Z0JBQU1DLE9BQU87WUFBSztZQUNuQyxJQUFJO2dCQUNGRyxRQUFRQyxHQUFHLENBQUMseUNBQXlDRjtnQkFDckQsTUFBTUosV0FBVyxNQUFNSiwwREFBV0EsQ0FBQ1csa0JBQWtCLENBQUNIO2dCQUN0REMsUUFBUUMsR0FBRyxDQUFDLDZCQUE2Qk47Z0JBRXpDLGlDQUFpQztnQkFDakMsTUFBTVEsaUJBQWlCO3VCQUFJUjtpQkFBUyxDQUFDUyxJQUFJLENBQ3ZDLENBQUNDLEdBQUdDLElBQU0sSUFBSUMsS0FBS0YsRUFBRUcsU0FBUyxFQUFFQyxPQUFPLEtBQUssSUFBSUYsS0FBS0QsRUFBRUUsU0FBUyxFQUFFQyxPQUFPO2dCQUczRWhCLElBQUlpQixDQUFBQSxRQUFVO3dCQUNaZixVQUFVOzRCQUNSLEdBQUdlLE1BQU1mLFFBQVE7NEJBQ2pCLENBQUNJLFVBQVUsRUFBRUk7d0JBQ2Y7b0JBQ0Y7WUFDRixFQUFFLE9BQU9OLE9BQU87Z0JBQ2RHLFFBQVFILEtBQUssQ0FBQyxtQ0FBbUNBO2dCQUNqREosSUFBSTtvQkFBRUksT0FBTyxNQUFpQmMsT0FBTztnQkFBQztZQUN4QyxTQUFVO2dCQUNSbEIsSUFBSTtvQkFBRUcsV0FBVztnQkFBTTtZQUN6QjtRQUNGO1FBRUFnQixhQUFhLGVBQU9iLFdBQW1CYztnQkFBaUJDLHdFQUFvQjtZQUMxRXJCLElBQUk7Z0JBQUVHLFdBQVc7Z0JBQU1DLE9BQU87WUFBSztZQUNuQyxJQUFJO2dCQUNGRyxRQUFRQyxHQUFHLENBQUMsMkJBQTJCO29CQUFFRjtvQkFBV2M7b0JBQVNDO2dCQUFLO2dCQUNsRSxNQUFNSCxVQUFVLE1BQU1wQiwwREFBV0EsQ0FBQ3FCLFdBQVcsQ0FBQ2IsV0FBV2MsU0FBU0M7Z0JBQ2xFZCxRQUFRQyxHQUFHLENBQUMsd0JBQXdCVTtnQkFFcEMsb0RBQW9EO2dCQUNwRGxCLElBQUlpQixDQUFBQSxRQUFVO3dCQUNaZixVQUFVOzRCQUNSLEdBQUdlLE1BQU1mLFFBQVE7NEJBQ2pCLENBQUNJLFVBQVUsRUFBRTttQ0FBS1csTUFBTWYsUUFBUSxDQUFDSSxVQUFVLElBQUksRUFBRTtnQ0FBR1k7NkJBQVE7d0JBQzlEO29CQUNGO1lBQ0YsRUFBRSxPQUFPZCxPQUFPO2dCQUNkRyxRQUFRSCxLQUFLLENBQUMsaUNBQWlDQTtnQkFDL0NKLElBQUk7b0JBQUVJLE9BQU8sTUFBaUJjLE9BQU87Z0JBQUM7Z0JBQ3RDLE1BQU1kO1lBQ1IsU0FBVTtnQkFDUkosSUFBSTtvQkFBRUcsV0FBVztnQkFBTTtZQUN6QjtRQUNGO0lBQ0YsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc3RvcmVzL21lc3NhZ2Utc3RvcmUudHM/NzNmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGUgfSBmcm9tICd6dXN0YW5kJztcclxuaW1wb3J0IHsgbWVzc2FnZXNBcGksIHR5cGUgTWVzc2FnZVR5cGUgfSBmcm9tICcuLi9saWIvYXBpL21lc3NhZ2VzJztcclxuXHJcbmludGVyZmFjZSBNZXNzYWdlU3RvcmUge1xyXG4gIG1lc3NhZ2VzOiBSZWNvcmQ8c3RyaW5nLCBhbnlbXT47ICAvLyBjaGFubmVsSWQgLT4gbWVzc2FnZXNbXVxyXG4gIGlzTG9hZGluZzogYm9vbGVhbjtcclxuICBlcnJvcjogc3RyaW5nIHwgbnVsbDtcclxuICBmZXRjaE1lc3NhZ2VzOiAoY2hhbm5lbElkOiBzdHJpbmcpID0+IFByb21pc2U8dm9pZD47XHJcbiAgc2VuZE1lc3NhZ2U6IChjaGFubmVsSWQ6IHN0cmluZywgY29udGVudDogc3RyaW5nLCB0eXBlPzogTWVzc2FnZVR5cGUpID0+IFByb21pc2U8dm9pZD47XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCB1c2VNZXNzYWdlU3RvcmUgPSBjcmVhdGU8TWVzc2FnZVN0b3JlPigoc2V0LCBnZXQpID0+ICh7XHJcbiAgbWVzc2FnZXM6IHt9LFxyXG4gIGlzTG9hZGluZzogZmFsc2UsXHJcbiAgZXJyb3I6IG51bGwsXHJcblxyXG4gIGZldGNoTWVzc2FnZXM6IGFzeW5jIChjaGFubmVsSWQ6IHN0cmluZykgPT4ge1xyXG4gICAgc2V0KHsgaXNMb2FkaW5nOiB0cnVlLCBlcnJvcjogbnVsbCB9KTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTdG9yZTogRmV0Y2hpbmcgbWVzc2FnZXMgZm9yIGNoYW5uZWw6JywgY2hhbm5lbElkKTtcclxuICAgICAgY29uc3QgbWVzc2FnZXMgPSBhd2FpdCBtZXNzYWdlc0FwaS5nZXRDaGFubmVsTWVzc2FnZXMoY2hhbm5lbElkKTtcclxuICAgICAgY29uc29sZS5sb2coJ1N0b3JlOiBSZWNlaXZlZCBtZXNzYWdlczonLCBtZXNzYWdlcyk7XHJcbiAgICAgIFxyXG4gICAgICAvLyBTb3J0IG1lc3NhZ2VzIGJ5IGNyZWF0aW9uIGRhdGVcclxuICAgICAgY29uc3Qgc29ydGVkTWVzc2FnZXMgPSBbLi4ubWVzc2FnZXNdLnNvcnQoXHJcbiAgICAgICAgKGEsIGIpID0+IG5ldyBEYXRlKGEuY3JlYXRlZEF0KS5nZXRUaW1lKCkgLSBuZXcgRGF0ZShiLmNyZWF0ZWRBdCkuZ2V0VGltZSgpXHJcbiAgICAgICk7XHJcblxyXG4gICAgICBzZXQoc3RhdGUgPT4gKHtcclxuICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgLi4uc3RhdGUubWVzc2FnZXMsXHJcbiAgICAgICAgICBbY2hhbm5lbElkXTogc29ydGVkTWVzc2FnZXNcclxuICAgICAgICB9XHJcbiAgICAgIH0pKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1N0b3JlOiBFcnJvciBmZXRjaGluZyBtZXNzYWdlczonLCBlcnJvcik7XHJcbiAgICAgIHNldCh7IGVycm9yOiAoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2UgfSk7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBzZXQoeyBpc0xvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIHNlbmRNZXNzYWdlOiBhc3luYyAoY2hhbm5lbElkOiBzdHJpbmcsIGNvbnRlbnQ6IHN0cmluZywgdHlwZTogTWVzc2FnZVR5cGUgPSAnVEVYVCcpID0+IHtcclxuICAgIHNldCh7IGlzTG9hZGluZzogdHJ1ZSwgZXJyb3I6IG51bGwgfSk7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zb2xlLmxvZygnU3RvcmU6IFNlbmRpbmcgbWVzc2FnZTonLCB7IGNoYW5uZWxJZCwgY29udGVudCwgdHlwZSB9KTtcclxuICAgICAgY29uc3QgbWVzc2FnZSA9IGF3YWl0IG1lc3NhZ2VzQXBpLnNlbmRNZXNzYWdlKGNoYW5uZWxJZCwgY29udGVudCwgdHlwZSk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTdG9yZTogTWVzc2FnZSBzZW50OicsIG1lc3NhZ2UpO1xyXG4gICAgICBcclxuICAgICAgLy8gQWRkIHRoZSBuZXcgbWVzc2FnZSB0byB0aGUgY2hhbm5lbCdzIG1lc3NhZ2UgbGlzdFxyXG4gICAgICBzZXQoc3RhdGUgPT4gKHtcclxuICAgICAgICBtZXNzYWdlczoge1xyXG4gICAgICAgICAgLi4uc3RhdGUubWVzc2FnZXMsXHJcbiAgICAgICAgICBbY2hhbm5lbElkXTogWy4uLihzdGF0ZS5tZXNzYWdlc1tjaGFubmVsSWRdIHx8IFtdKSwgbWVzc2FnZV1cclxuICAgICAgICB9XHJcbiAgICAgIH0pKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1N0b3JlOiBFcnJvciBzZW5kaW5nIG1lc3NhZ2U6JywgZXJyb3IpO1xyXG4gICAgICBzZXQoeyBlcnJvcjogKGVycm9yIGFzIEVycm9yKS5tZXNzYWdlIH0pO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHNldCh7IGlzTG9hZGluZzogZmFsc2UgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59KSk7ICJdLCJuYW1lcyI6WyJjcmVhdGUiLCJtZXNzYWdlc0FwaSIsInVzZU1lc3NhZ2VTdG9yZSIsInNldCIsImdldCIsIm1lc3NhZ2VzIiwiaXNMb2FkaW5nIiwiZXJyb3IiLCJmZXRjaE1lc3NhZ2VzIiwiY2hhbm5lbElkIiwiY29uc29sZSIsImxvZyIsImdldENoYW5uZWxNZXNzYWdlcyIsInNvcnRlZE1lc3NhZ2VzIiwic29ydCIsImEiLCJiIiwiRGF0ZSIsImNyZWF0ZWRBdCIsImdldFRpbWUiLCJzdGF0ZSIsIm1lc3NhZ2UiLCJzZW5kTWVzc2FnZSIsImNvbnRlbnQiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/stores/message-store.ts\n"));

/***/ })

});