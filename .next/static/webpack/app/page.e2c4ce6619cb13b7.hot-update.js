"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/stores/channel-store.ts":
/*!*************************************!*\
  !*** ./src/stores/channel-store.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChannelStore: function() { return /* binding */ useChannelStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(app-pages-browser)/./node_modules/zustand/esm/react.mjs\");\n/* harmony import */ var _lib_api_channels__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/api/channels */ \"(app-pages-browser)/./src/lib/api/channels.ts\");\n\n\nconst useChannelStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        channels: [],\n        activeChannelId: null,\n        isLoading: false,\n        error: null,\n        fetchChannels: async ()=>{\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                console.log(\"Store: Fetching channels...\");\n                const channels = await _lib_api_channels__WEBPACK_IMPORTED_MODULE_0__.channelsApi.list();\n                console.log(\"Store: Received channels:\", channels);\n                if (!channels || channels.length === 0) {\n                    console.log(\"Store: No channels received\");\n                }\n                set({\n                    channels: channels || []\n                });\n            } catch (error) {\n                console.error(\"Store: Error fetching channels:\", error);\n                set({\n                    error: error.message\n                });\n            } finally{\n                set({\n                    isLoading: false\n                });\n            }\n        },\n        createChannel: async function(name) {\n            let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"PUBLIC\", creatorId = arguments.length > 2 ? arguments[2] : void 0;\n            set({\n                isLoading: true,\n                error: null\n            });\n            try {\n                console.log(\"Store: Creating channel:\", {\n                    name,\n                    type,\n                    creatorId\n                });\n                const channel = await _lib_api_channels__WEBPACK_IMPORTED_MODULE_0__.channelsApi.create({\n                    name,\n                    type,\n                    creatorId\n                });\n                console.log(\"Store: Channel created:\", channel);\n                set((state)=>({\n                        channels: [\n                            ...state.channels,\n                            channel\n                        ],\n                        activeChannelId: channel.id\n                    }));\n                return channel;\n            } catch (error) {\n                console.error(\"Store: Error creating channel:\", error);\n                set({\n                    error: error.message\n                });\n                throw error;\n            } finally{\n                set({\n                    isLoading: false\n                });\n            }\n        },\n        setActiveChannel: (channelId)=>{\n            console.log(\"Store: Setting active channel:\", channelId);\n            set({\n                activeChannelId: channelId\n            });\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zdG9yZXMvY2hhbm5lbC1zdG9yZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBaUM7QUFDdUQ7QUFZakYsTUFBTUUsa0JBQWtCRiwrQ0FBTUEsQ0FBZSxDQUFDRyxLQUFLQyxNQUFTO1FBQ2pFQyxVQUFVLEVBQUU7UUFDWkMsaUJBQWlCO1FBQ2pCQyxXQUFXO1FBQ1hDLE9BQU87UUFFUEMsZUFBZTtZQUNiTixJQUFJO2dCQUFFSSxXQUFXO2dCQUFNQyxPQUFPO1lBQUs7WUFDbkMsSUFBSTtnQkFDRkUsUUFBUUMsR0FBRyxDQUFDO2dCQUNaLE1BQU1OLFdBQVcsTUFBTUosMERBQVdBLENBQUNXLElBQUk7Z0JBQ3ZDRixRQUFRQyxHQUFHLENBQUMsNkJBQTZCTjtnQkFFekMsSUFBSSxDQUFDQSxZQUFZQSxTQUFTUSxNQUFNLEtBQUssR0FBRztvQkFDdENILFFBQVFDLEdBQUcsQ0FBQztnQkFDZDtnQkFFQVIsSUFBSTtvQkFBRUUsVUFBVUEsWUFBWSxFQUFFO2dCQUFDO1lBQ2pDLEVBQUUsT0FBT0csT0FBTztnQkFDZEUsUUFBUUYsS0FBSyxDQUFDLG1DQUFtQ0E7Z0JBQ2pETCxJQUFJO29CQUFFSyxPQUFPLE1BQWlCTSxPQUFPO2dCQUFDO1lBQ3hDLFNBQVU7Z0JBQ1JYLElBQUk7b0JBQUVJLFdBQVc7Z0JBQU07WUFDekI7UUFDRjtRQUVBUSxlQUFlLGVBQU9DO2dCQUFjQyx3RUFBMEIsVUFBVUM7WUFDdEVmLElBQUk7Z0JBQUVJLFdBQVc7Z0JBQU1DLE9BQU87WUFBSztZQUNuQyxJQUFJO2dCQUNGRSxRQUFRQyxHQUFHLENBQUMsNEJBQTRCO29CQUFFSztvQkFBTUM7b0JBQU1DO2dCQUFVO2dCQUNoRSxNQUFNQyxVQUFVLE1BQU1sQiwwREFBV0EsQ0FBQ0QsTUFBTSxDQUFDO29CQUFFZ0I7b0JBQU1DO29CQUFNQztnQkFBVTtnQkFDakVSLFFBQVFDLEdBQUcsQ0FBQywyQkFBMkJRO2dCQUV2Q2hCLElBQUlpQixDQUFBQSxRQUFVO3dCQUNaZixVQUFVOytCQUFJZSxNQUFNZixRQUFROzRCQUFFYzt5QkFBUTt3QkFDdENiLGlCQUFpQmEsUUFBUUUsRUFBRTtvQkFDN0I7Z0JBQ0EsT0FBT0Y7WUFDVCxFQUFFLE9BQU9YLE9BQU87Z0JBQ2RFLFFBQVFGLEtBQUssQ0FBQyxrQ0FBa0NBO2dCQUNoREwsSUFBSTtvQkFBRUssT0FBTyxNQUFpQk0sT0FBTztnQkFBQztnQkFDdEMsTUFBTU47WUFDUixTQUFVO2dCQUNSTCxJQUFJO29CQUFFSSxXQUFXO2dCQUFNO1lBQ3pCO1FBQ0Y7UUFFQWUsa0JBQWtCLENBQUNDO1lBQ2pCYixRQUFRQyxHQUFHLENBQUMsa0NBQWtDWTtZQUM5Q3BCLElBQUk7Z0JBQUVHLGlCQUFpQmlCO1lBQVU7UUFDbkM7SUFDRixJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9zdG9yZXMvY2hhbm5lbC1zdG9yZS50cz9jN2Q3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ3p1c3RhbmQnO1xyXG5pbXBvcnQgeyBjaGFubmVsc0FwaSwgdHlwZSBDaGFubmVsLCB0eXBlIENyZWF0ZUNoYW5uZWxUeXBlIH0gZnJvbSAnLi4vbGliL2FwaS9jaGFubmVscyc7XHJcblxyXG5pbnRlcmZhY2UgQ2hhbm5lbFN0b3JlIHtcclxuICBjaGFubmVsczogQ2hhbm5lbFtdO1xyXG4gIGFjdGl2ZUNoYW5uZWxJZDogc3RyaW5nIHwgbnVsbDtcclxuICBpc0xvYWRpbmc6IGJvb2xlYW47XHJcbiAgZXJyb3I6IHN0cmluZyB8IG51bGw7XHJcbiAgZmV0Y2hDaGFubmVsczogKCkgPT4gUHJvbWlzZTx2b2lkPjtcclxuICBjcmVhdGVDaGFubmVsOiAobmFtZTogc3RyaW5nLCB0eXBlOiBDcmVhdGVDaGFubmVsVHlwZSwgY3JlYXRvcklkOiBzdHJpbmcpID0+IFByb21pc2U8Q2hhbm5lbD47XHJcbiAgc2V0QWN0aXZlQ2hhbm5lbDogKGNoYW5uZWxJZDogc3RyaW5nKSA9PiB2b2lkO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgdXNlQ2hhbm5lbFN0b3JlID0gY3JlYXRlPENoYW5uZWxTdG9yZT4oKHNldCwgZ2V0KSA9PiAoe1xyXG4gIGNoYW5uZWxzOiBbXSxcclxuICBhY3RpdmVDaGFubmVsSWQ6IG51bGwsXHJcbiAgaXNMb2FkaW5nOiBmYWxzZSxcclxuICBlcnJvcjogbnVsbCxcclxuXHJcbiAgZmV0Y2hDaGFubmVsczogYXN5bmMgKCkgPT4ge1xyXG4gICAgc2V0KHsgaXNMb2FkaW5nOiB0cnVlLCBlcnJvcjogbnVsbCB9KTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTdG9yZTogRmV0Y2hpbmcgY2hhbm5lbHMuLi4nKTtcclxuICAgICAgY29uc3QgY2hhbm5lbHMgPSBhd2FpdCBjaGFubmVsc0FwaS5saXN0KCk7XHJcbiAgICAgIGNvbnNvbGUubG9nKCdTdG9yZTogUmVjZWl2ZWQgY2hhbm5lbHM6JywgY2hhbm5lbHMpO1xyXG4gICAgICBcclxuICAgICAgaWYgKCFjaGFubmVscyB8fCBjaGFubmVscy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICBjb25zb2xlLmxvZygnU3RvcmU6IE5vIGNoYW5uZWxzIHJlY2VpdmVkJyk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIHNldCh7IGNoYW5uZWxzOiBjaGFubmVscyB8fCBbXSB9KTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1N0b3JlOiBFcnJvciBmZXRjaGluZyBjaGFubmVsczonLCBlcnJvcik7XHJcbiAgICAgIHNldCh7IGVycm9yOiAoZXJyb3IgYXMgRXJyb3IpLm1lc3NhZ2UgfSk7XHJcbiAgICB9IGZpbmFsbHkge1xyXG4gICAgICBzZXQoeyBpc0xvYWRpbmc6IGZhbHNlIH0pO1xyXG4gICAgfVxyXG4gIH0sXHJcblxyXG4gIGNyZWF0ZUNoYW5uZWw6IGFzeW5jIChuYW1lOiBzdHJpbmcsIHR5cGU6IENyZWF0ZUNoYW5uZWxUeXBlID0gJ1BVQkxJQycsIGNyZWF0b3JJZDogc3RyaW5nKSA9PiB7XHJcbiAgICBzZXQoeyBpc0xvYWRpbmc6IHRydWUsIGVycm9yOiBudWxsIH0pO1xyXG4gICAgdHJ5IHtcclxuICAgICAgY29uc29sZS5sb2coJ1N0b3JlOiBDcmVhdGluZyBjaGFubmVsOicsIHsgbmFtZSwgdHlwZSwgY3JlYXRvcklkIH0pO1xyXG4gICAgICBjb25zdCBjaGFubmVsID0gYXdhaXQgY2hhbm5lbHNBcGkuY3JlYXRlKHsgbmFtZSwgdHlwZSwgY3JlYXRvcklkIH0pO1xyXG4gICAgICBjb25zb2xlLmxvZygnU3RvcmU6IENoYW5uZWwgY3JlYXRlZDonLCBjaGFubmVsKTtcclxuICAgICAgXHJcbiAgICAgIHNldChzdGF0ZSA9PiAoe1xyXG4gICAgICAgIGNoYW5uZWxzOiBbLi4uc3RhdGUuY2hhbm5lbHMsIGNoYW5uZWxdLFxyXG4gICAgICAgIGFjdGl2ZUNoYW5uZWxJZDogY2hhbm5lbC5pZFxyXG4gICAgICB9KSk7XHJcbiAgICAgIHJldHVybiBjaGFubmVsO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcignU3RvcmU6IEVycm9yIGNyZWF0aW5nIGNoYW5uZWw6JywgZXJyb3IpO1xyXG4gICAgICBzZXQoeyBlcnJvcjogKGVycm9yIGFzIEVycm9yKS5tZXNzYWdlIH0pO1xyXG4gICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH0gZmluYWxseSB7XHJcbiAgICAgIHNldCh7IGlzTG9hZGluZzogZmFsc2UgfSk7XHJcbiAgICB9XHJcbiAgfSxcclxuXHJcbiAgc2V0QWN0aXZlQ2hhbm5lbDogKGNoYW5uZWxJZDogc3RyaW5nKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnU3RvcmU6IFNldHRpbmcgYWN0aXZlIGNoYW5uZWw6JywgY2hhbm5lbElkKTtcclxuICAgIHNldCh7IGFjdGl2ZUNoYW5uZWxJZDogY2hhbm5lbElkIH0pO1xyXG4gIH1cclxufSkpOyAiXSwibmFtZXMiOlsiY3JlYXRlIiwiY2hhbm5lbHNBcGkiLCJ1c2VDaGFubmVsU3RvcmUiLCJzZXQiLCJnZXQiLCJjaGFubmVscyIsImFjdGl2ZUNoYW5uZWxJZCIsImlzTG9hZGluZyIsImVycm9yIiwiZmV0Y2hDaGFubmVscyIsImNvbnNvbGUiLCJsb2ciLCJsaXN0IiwibGVuZ3RoIiwibWVzc2FnZSIsImNyZWF0ZUNoYW5uZWwiLCJuYW1lIiwidHlwZSIsImNyZWF0b3JJZCIsImNoYW5uZWwiLCJzdGF0ZSIsImlkIiwic2V0QWN0aXZlQ2hhbm5lbCIsImNoYW5uZWxJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/stores/channel-store.ts\n"));

/***/ })

});